From 6c0ac4ed7488ee24f1e6a3fc5a101b9c53e3fc5b Mon Sep 17 00:00:00 2001
From: micbis <michele.bisogno.ct@renesas.com>
Date: Mon, 10 May 2021 10:30:15 +0200
Subject: [PATCH 2/2] target/arm_adi_v5: Fixes for Renesas RZ/G2L

This fix to mem_ap_init is required to support RZ/G2L. The first
problem is related to the back to back CSW write and successive
reads to CSW and CFG, solved by splitting the accesses. The second
is related to the CSW MEM-AP access size. 8-bit is not required by
Arm ADI v5 architecture and it causes troubles when examining the
Cortex-M33. Fixed by using 32-bit access size, whose support is
mandatory.

Change-Id: Ia0dcbdd8b975083e2462976ccdca26875a1add31
Signed-off-by: micbis <michele.bisogno.ct@renesas.com>
---
 src/target/arm_adi_v5.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/target/arm_adi_v5.c b/src/target/arm_adi_v5.c
index 8f5ad59c3..8495975ee 100644
--- a/src/target/arm_adi_v5.c
+++ b/src/target/arm_adi_v5.c
@@ -763,7 +763,13 @@ int mem_ap_init(struct adiv5_ap *ap)
 
 	ap->tar_valid = false;
 	ap->csw_value = 0;      /* force csw and tar write */
-	retval = mem_ap_setup_transfer(ap, CSW_8BIT | CSW_ADDRINC_PACKED, 0);
+	retval = mem_ap_setup_transfer(ap, CSW_32BIT | CSW_ADDRINC_PACKED, 0);
+	if (retval != ERROR_OK)
+		return retval;
+
+	/* Split back-to-back write and read to CSW to avoid
+	 * potential issues with some targets (e.g. Renesas RZ/G2L) */
+	retval = dap_run(dap);
 	if (retval != ERROR_OK)
 		return retval;
 
-- 
2.25.1

